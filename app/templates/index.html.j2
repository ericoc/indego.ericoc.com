{%- macro graph(count, character) %}
    {%- if count and count > 0 -%}
        {%- for item in range(count) -%}{{ character }}{%- endfor -%}
    {%- endif -%}
{%- endmacro %}
{%- set bikes_character = '█' %}
{%- set docks_character = '█' %}
{%- set bikes_css_class     = 'bikes' %}
{%- set docks_css_class     = 'docks' %}
{%- set electric_css_class  = 'electric' %}
{%- if stations is defined and stations is iterable and stations | length > 0 -%}
    {%- set total_stations              = stations | length %}
    {%- set available_stations          = stations.values() | selectattr('kioskPublicStatus', '==', 'Active') | list | length %}
    {%- set unavailable_stations        = stations.values() | selectattr('kioskPublicStatus', '!=', 'Active') | list | length %}
    {%- set total_bikes_available       = stations.values() | sum(attribute='bikesAvailable') %}
    {%- set total_docks_available       = stations.values() | sum(attribute='docksAvailable') %}
    {%- set total_electric_available    = stations.values() | sum(attribute='electricBikesAvailable') %}
    {%- set center_lat                  = stations.values() | map(attribute='latitude') | sum / total_stations %}
    {%- set center_lng                  = stations.values() | map(attribute='longitude') | sum / total_stations %}
    {%- set sw_bounds_lat               = stations.values() | map(attribute='latitude') | min %}
    {%- set sw_bounds_lng               = stations.values() | map(attribute='longitude') | min %}
    {%- set ne_bounds_lat               = stations.values() | map(attribute='latitude') | max %}
    {%- set ne_bounds_lng               = stations.values() | map(attribute='longitude') | max %}
{%- else -%}
    {%- set total_stations              = 0 -%}
    {%- set available_stations          = 0 %}
    {%- set unavailable_stations        = 0 %}
    {%- set total_bikes_available       = 0 %}
    {%- set total_docks_available       = 0 %}
    {%- set total_electric_available    = 0 %}
    {%- set center_lat                  = 39.9528 %}
    {%- set center_lng                  = -75.1635 %}
{%- endif -%}
<!--
{%- if new_stations %}
    {{ new_stations }}
{%- endif %}
-->
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta chartset="utf-8">
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <meta name="author" content="Eric O'Callaghan">
        <meta name="description" content="A quick and easy way to see available bicycles and docks for Philadlephia Indego bicycle-share stations">
        <meta name="keywords" content="Indego, RideIndego, Ride Indego, Philadelphia, Philly, bikes, bikeshare, bike-share, bicycles">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta property="og:type" content="website">
        <meta property="og:site_name" content="Philadelphia Indego Bicycle Stations">
        <meta property="og:title" content="Philadelphia Indego Bicycle Stations">
        <meta property="og:description" content="A quick and easy way to see available bicycles and docks for Philadlephia Indego bicycle-share stations">
        <meta property="og:url" content="{{ url_for('index', _external=True) }}">
        <meta property="og:image" content="{{ url_for('static', filename='icon.png', _external=True) }}">
        <link href="{{ url_for('static', filename='style.css') }}" rel="stylesheet" type="text/css">
        <link rel="shortcut icon" href="{{ url_for('static', filename='icon.png') }}">
        <link rel="apple-touch-icon" href="{{ url_for('static', filename='icon.png') }}">
        <title>
            PHL
    {%- if search and total_stations > 1 %}
            / {{ search[0:15] | safe }}{%- if search | length > 15 %}...{%- endif %}
    {%- else %}
        {%- if total_stations == 1 %}
            {%- for kiosk_id, station in stations.items() %}
            / {{ station['name'][0:20] | safe }}{%- if station['name'] | length > 20 %}...{%- endif %}
            {%- endfor %}
        {%- endif %}
    {%- endif %}
            / {{ total_stations }} station{% if total_stations != 1 %}s{% endif %}
        </title>
    {%- if googlemaps_api_key %}
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key={{ googlemaps_api_key }}&callback=initMap" async defer>
        </script>
    {%- endif %}
        <script type="text/javascript">
    {%- if googlemaps_api_key %}

            // Start with empty markers and infowindows
            var markers     = [];
            var infowindows = [];

            // Google map init function
            var map;
            function initMap() {

                var center = { 
                    lat:    {{ center_lat }},
                    lng:    {{ center_lng }}
                };

                // Create the map with its center point and zoom
                map   = new google.maps.Map(document.getElementById('map-canvas'), {
                    center: center, 
                    zoom:   12
                });

        {%- if sw_bounds_lat and sw_bounds_lng and ne_bounds_lat and ne_bounds_lng %}
                var bounds = new google.maps.LatLngBounds(
                    new google.maps.LatLng({{ sw_bounds_lat }}, {{ sw_bounds_lng }}),
                    new google.maps.LatLng({{ ne_bounds_lat }}, {{ ne_bounds_lng }})
                );
                map.fitBounds(bounds);
        {%- endif %}

        {%- if stations %}
            {%- for kiosk_id, station in stations.items() %}

              // Begin marker {{ kiosk_id }}
                {%- set station_name    = station['name'] | safe | replace("'", "\\'") | replace('"', '\\"') %}
                {%- set non_electric    = station['bikesAvailable'] - station['electricBikesAvailable'] %}
                {%- set address_full    = station['addressStreet'] + '<br>' + station['addressCity'] + ', ' + station['addressState'] +  ' ' + station['addressZipCode'] %}
            {%- if station['kioskPublicStatus'] != 'Active' %}
                {%- set station_status  = '<span class="unavailable">' + station['kioskPublicStatus'] + '</span>' %}
            {%- else %}
                {%- set station_status  = station['kioskPublicStatus'] %}
            {%- endif %}
                var contentString_{{ kiosk_id }}   = '<h4>';
                contentString_{{ kiosk_id }}       += '<a href="#{{ kiosk_id }}">{{ station_name }}</a>';
                contentString_{{ kiosk_id }}       += ' ';
                contentString_{{ kiosk_id }}       += '<a href="{{ url_for('search_stations', search=kiosk_id) }}#{{ kiosk_id }}">🔗</a>';
                contentString_{{ kiosk_id }}       += '</h4>';
                contentString_{{ kiosk_id }}       += '<div class="graph">';
                contentString_{{ kiosk_id }}       += '<a href="#{{ kiosk_id }}" target="popup" onclick="window.open(this.href,\'_self\'); window.open(\'{{ url_for('chart_station', chart_string=kiosk_id) }}\',\'popup\',\'width=800,height=500\'); return false;">';
                contentString_{{ kiosk_id }}       += '<span class="{{ bikes_css_class }}">{{ graph(non_electric, bikes_character) }}</span>';
                contentString_{{ kiosk_id }}       += '<span class="{{ electric_css_class }}">{{ graph(station["electricBikesAvailable"], bikes_character) }}</span>';

                contentString_{{ kiosk_id }}       += '<span class="{{ docks_css_class }}">{{ graph(station["docksAvailable"], docks_character) }}</span>';
                contentString_{{ kiosk_id }}       += '</a>';
                contentString_{{ kiosk_id }}       += '</div>';
                contentString_{{ kiosk_id }}       += '<b>Bikes</b>: {{ station["bikesAvailable"] }} ';
                contentString_{{ kiosk_id }}       += '({{ station["electricBikesAvailable"] }} electric)<br>';
                contentString_{{ kiosk_id }}       += '<b>Docks</b>: {{ station["docksAvailable"] }} (of {{ station["totalDocks"] }})<br>';
                contentString_{{ kiosk_id }}       += '<a href="https://www.google.com/maps/search/?api=1&query={{ station["latitude"] }},{{ station["longitude"] }}" target="_blank">';
                contentString_{{ kiosk_id }}       += '{{ address_full }}';
                contentString_{{ kiosk_id }}       += '</a>';
                contentString_{{ kiosk_id }}       += '<br>';
                contentString_{{ kiosk_id }}       += '<b>Kiosk #</b>: {{ kiosk_id }}<br>';
                contentString_{{ kiosk_id }}       += '<b>Status</b>: {{ station_status | safe }}<br>';
                const infowindow_{{ kiosk_id }}    = new google.maps.InfoWindow({
                    content:    contentString_{{ kiosk_id }},
                });

                const marker_{{ kiosk_id }} = new google.maps.Marker({
                    position:   { lat: {{ station['latitude'] }}, lng: {{ station['longitude'] }} },
                    map,
                    title:      "{{ station_name }}",
                    zIndex:     {{ kiosk_id }}
                });
                marker_{{ kiosk_id }}.addListener('click', () => {
                    closeWindows(infowindows);
                    infowindow_{{ kiosk_id }}.open({
                        anchor:         marker_{{ kiosk_id }},
                        map,
                        shouldFocus:    true
                    });
                    infowindows[{{ kiosk_id }}] = infowindow_{{ kiosk_id }};
                });
                markers[{{ kiosk_id }}] = marker_{{ kiosk_id }};

                infowindow_{{ kiosk_id }}.addListener('closeclick', () => {
                    delete(infowindows[{{ kiosk_id }}]);
                });
              // End marker {{ kiosk_id }}

            {%- endfor %}

                // Open infowindow for a marker if its kiosk ID is in the anchor tag
                if (window.location.hash.substr(1)) {
                    markerOpen(window.location.hash.substr(1));
                };

                // If there is only a single marker available in the search results, open its infowindow
                if (Object.keys(markers).length == 1) {
                    for (const [id, marker] of Object.entries(markers)) {
                        markerOpen(id);
                    };
                };

        {%- endif %}

            }; // End initMap function

            // Create a function to pan and zoom the map to the users current GPS location, if requested
            function findMe() {

                function success(pos) {
                    var crd = pos.coords;
                    var center_gps  = { lat: crd.latitude, lng: crd.longitude };
                    map.panTo(center_gps);

                    const infowindow_gps    = new google.maps.InfoWindow({
                        content:    '<h4>Your Location</h4>'
                    });
                    const marker_gps = new google.maps.Marker({
                        position:   center_gps,
                        map,
                        title:      'Your Location',
                        icon:       'https://maps.google.com/mapfiles/ms/icons/green-dot.png',
                        zIndex:     9999,
                        animation:  google.maps.Animation.DROP
                    });
                    marker_gps.addListener('click', () => {
                        infowindow_gps.open({
                            anchor:         marker_gps,
                            map,
                            shouldFocus:    true
                        });
                    });
                    google.maps.event.trigger(marker_gps, 'click');

                };

                function error(err) {
                    console.warn(err.code, err.message);
                };

                var options = {
                    timeout:            10000,
                    maximumAge:         30000,
                    enableHighAccuracy: true
                };

                navigator.geolocation.getCurrentPosition(success, error, options);
            };

            // Create a function to close any open infowindows for markers
            function closeWindows(infowindows) {
                if (infowindows) {
                    for (const [key, value] of Object.entries(infowindows)) {
                        infowindows[key].close();
                        delete(infowindows[key]);
                    };
                };
            };

            // Create a function to open infowindows for markers by the id key
            function markerOpen(id) {
                google.maps.event.trigger(markers[id], 'click');
            };

    {%- endif %}

        </script>
    </head>
    <body>
        <div id="left-box">
            <h1 title="Philadelphia Indego Bicycles">
                <a id="logo" href="{{ url_for('index') }}">
                    🚲
                </a>
            </h1>
            <div id="totals">
                <h2 title="{{ available_stations }} / {{ total_stations }} station{% if total_stations != 1 %}s{% endif %} available">
                    {{ available_stations }} / {{ total_stations }} station{% if total_stations != 1 %}s{% endif %} available
                </h2>
                <h3 title="{{ total_bikes_available }} bicycle{% if total_bikes_available != 1 %}s{% endif %} available ({{ total_electric_available }} electric)">
                    {{ total_bikes_available }} bicycle{% if total_bikes_available != 1 %}s{% endif %} available
                    ({{ total_electric_available }} electric)
                </h3>
                <h3 title="{{ total_docks_available }} dock{% if total_docks_available != 1 %}s{% endif %} available">
                    {{ total_docks_available }} dock{% if total_docks_available != 1 %}s{% endif %} available
                </h3>
            </div>
            <div id="search" title="Search">
                <button onclick="findMe();" title="My Location">📍</button>
                <form method="post" action="{{ url_for('search_form') }}">
                    <input type="text" name="search">
                    <i>
                        (i.e. "<a href="{{ url_for('search_stations', search='Broad') }}">Broad</a>",
                        "<a href="{{ url_for('search_stations', search='19107') }}">19107</a>",
                        or "<a href="{{ url_for('search_stations', search='Market' )}}">Market</a>")
                    </i>
                    <input type="submit" value="Search!">
                </form>
            </div>
    {%- with messages = get_flashed_messages(with_categories=True) %}
        {%- if messages %}
            <div id="messages" title="Messages">
                <ul id="flashes">
            {%- for category, message in messages %}
                    <li class="flash-{{ category }}">
                        {{ message }}
                    </li>
            {%- endfor %}
                </ul>
            </div>
        {%- endif %}
    {%- endwith %}
    {%- if googlemaps_api_key %}
            <div id="map-canvas"></div>
    {%- endif %}
    {%- if added_web and added_since %}
            <p id="added">
                <code title="As of: {{ added_web.strftime('%a, %d %b %Y @ %I:%M:%S %p %Z') }} ({{ added_since }} ago)">
                    as of:
                    {{ added_web.strftime('%a, %d %b %Y @ %I:%M:%S %p %Z') }}
                </code>
            </p>
    {%- endif %}
        </div>
    {%- if total_stations > 0 %}
        <div id="right-box">
            <div id="station-list" title="Stations">
                <ol>
            {%- for kiosk_id, station in stations.items() %}
                    <li id="{{ kiosk_id }}" value="{{ kiosk_id }}"{% if station['kioskPublicStatus'] != 'Active' %} class="unavailable"{% endif %}>
                        <a href="#{{ kiosk_id }}" onclick="markerOpen({{ kiosk_id }});" title="{{ station['name'] | safe }}" class="station-link">
                            {{ station['name'] | safe }}
                            <div class="graph">
                                {%- set non_electric = station['bikesAvailable'] - station['electricBikesAvailable'] %}
                                <span title="{{ non_electric }} bike{% if non_electric != 1 %}s{% endif %}" class="{{ bikes_css_class }}">
                                    {{- graph(non_electric, bikes_character) -}}
                                </span><span title="{{ station['electricBikesAvailable'] }} electric bike{% if station['electricBikesAvailable'] != 1 %}s{% endif %}" class="{{ electric_css_class }}">
                                    {{- graph(station["electricBikesAvailable"], bikes_character) -}}
                                </span><span title="{{ station['docksAvailable'] }} dock{% if station['docksAvailable'] != 1 %}s{% endif %}" class="{{ docks_css_class }}">
                                    {{- graph(station["docksAvailable"], docks_character) -}}
                                </span>
                            </div>
                        </a>
                    </li>
            {%- endfor %}
                </ol>
            </div>
            <p>
                <code>
                    <a href="https://github.com/ericoc/indego.ericoc.com" target="_blank">https://github.com/ericoc/indego.ericoc.com</a>
                </code>
            </p>
        </div>
    {%- endif %}
    </body>
</html>
